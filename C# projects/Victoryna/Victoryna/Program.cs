using System;
using System.Xml;
using static System.Console;
using System.Xml.Linq;
using System.Linq;
using System.Collections.Generic;

/*
Интерфейс приложения должен предоставлять такие возможности:
■ После входа в систему пользователь может:
• стартовать новую викторину;
• посмотреть результаты своих прошлых викторин;
• посмотреть Топ-20 по конкретной викторине;
• изменить настройки. Можно менять пароль и дату рождения;
• выход.
■ Для старта новой викторины пользователь должен выбрать раздел знаний
викторины. Например: «История», “География», «Биология» и т. д. Также
нужно предусмотреть смешанную викторину, когда вопросы будут выбираться 
из разных викторин по случайному принципу.
■ Конкретная викторина состоит из двадцати вопросов. У каждого вопроса
может быть один или несколько правильных вариантов ответа. 
Если вопрос предполагает несколько правильных ответов, а пользователь указал
не все, вопрос не засчитывается.
■ По завершении викторины пользователь получает количество правильно
отвеченных вопросов, а также свое место в таблице результатов игроков
викторины.

Необходимо также разработать утилиту для создания и редактирования
викторин и их вопросов. Это приложение должно предусматривать вход по логину и паролю.



Elements(XName)	- на крайняк можно опрделять, существует ли этот ХНаме
Возвращает фильтрованную коллекцию дочерних элементов для данного документа 
или элемента в порядке следования документа. 
В коллекцию включаются только элементы, соответствующие XName.

 
 топы - отдельный, третий файл;

        на крайняк - выводить вопросы через WritLine, 
        а ответы и point хранить в поле класса и выходить с их записью в xml топов
 */



namespace Victoryna
{
    class Program
    {
        static void Show()
        {
            bool flag = true;
            Vec v = new Vec();
            Console.WriteLine("Войдите в систему");
            v.Entrance();
            while (flag)
            {
                Console.WriteLine("Что хотите сделать?" +
                    "\n1 - Войти (зарегистрироваться)" +
                    "\n2 - Играть в викторину" +
                    "\n3 - посмотреть результаты прошлых викторин игрока" +
                    "\n4 - посмотреть результаты конкретной викторине" +
                    "\n0 - Выйти");
                switch (Console.ReadKey().KeyChar)
                {
                    case '1':
                        v.Entrance();
                        break;

                    case '2':
                        Console.WriteLine();
                        Console.WriteLine("Введите тему на выбор\n" +
                            "1 - rundom (общее)\n" +
                            "2 - георгафия");
                        v.play();
                        break;

                    case '3':
                        Console.WriteLine();
                        v.ShowUserResult();
                        break;

                    case '4':
                        Console.WriteLine();
                        Console.WriteLine("Введите тему на выбор\n" +
                            "1 - rundom (общее, рандомные знания)\n" +
                            "2 - география");
                        v.ShowTop();
                        break;

                    case '0':
                        flag = false;
                        break;
                }
                Console.ReadKey();
                Console.Clear();
            }
        }



        static void Main(string[] args)
        {
            Show();
        }
    }
}

